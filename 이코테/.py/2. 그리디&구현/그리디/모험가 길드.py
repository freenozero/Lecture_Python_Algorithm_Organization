##한 마을에 모험가가 N명이 있다.
##모험가 길드에서는 N명의 모험가를 대상으로 공포도 측정을 했는데,
##공포도가 높은 모험가는 쉽게 공포를 느껴 위험 상황에서 제대로 대처할 능력이 떨어진다.
##
##모험가 길드장인 동빈이는 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로
##구성한 모험가 그룹에만 참여해야 여행을 떠나도록 규정했다
##
##동빈이는 최대 몇 개의 모험가 그룹을 만들 수 있을지 N명의 모험가에 대한 정보가 주어졌을 때,
##여행을 떠날 수 있는 그룹의 최댓값을 구하는 프로그램을 작성하시오.

##EX) N=5이고, 공포도=2,3,1,2,2일때
##그룹 1에 1,2,3인 모험가 한 명씩
##그룹 2에 공포도가 2인 남은 두명을 넣기

#입력 조건은 모험가의 수 N, 둘째 줄에 각 모험가의 공포도를 공백으로 구분
#출력 조건은 그룹 수의 최댓값


#내 풀이
N = int(input("모험가의 수:"))
X = list(map(int, input().split()))
X.sort(reverse=True)
group = 0
i = 0

while(X[i] <= N):
    group += 1
    i = X[i]-1
    N -= X[i]

print(group)

#모범답안
#오름차순 정렬 후에 공포도가 낮은 모험가부터 하나씩 확인하고,
#항상 최소한의 모험가의 수만 포함하여 그룹을 결성한다.
#오름차순이다 내거는 내림차순으로 했다.
n = int(input())
data = list(map(int, input().split()))
data.sort()

result = 0 #총 그룹의 수
count = 0 #현재 그룹에 포함된 모험가의 수

for i in data: #공포도를 낮은 것 부터 하나씩 확인하며
    count += 1 #현재 그룹에 해당 모험가를 포함시키기
    if count >= i: #현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면, 그룹을 결성한다.
        result += 1 #총 그룹의 수를 증가시킨다.
        count = 0 #현재 그룹에 포함된 모험가의 수 기초
print(result)
